# Imports
import plotly.express as px
import plotly.graph_objects as go
import numpy as np
from sklearn.svm import SVR

# Parâmetros
mesh_size = .02
margin = 0

# Dataset
df = px.data.iris()

# Variáveis
X = df[['sepal_width', 'sepal_length']]
y = df['petal_width']

# Cria o modelo de Machine Learning
modelo = SVR(C=1.)

# Treina o modelo
modelo.fit(X, y)

# Mesh grid para mostrar o resultado do modelo
x_min, x_max = X.sepal_width.min() - margin, X.sepal_width.max() + margin
y_min, y_max = X.sepal_length.min() - margin, X.sepal_length.max() + margin
xrange = np.arange(x_min, x_max, mesh_size)
yrange = np.arange(y_min, y_max, mesh_size)
xx, yy = np.meshgrid(xrange, yrange)

# Previsões com o modelo
pred = modelo.predict(np.c_[xx.ravel(), yy.ravel()])
pred = pred.reshape(xx.shape)

# Gera o plot 3D
fig = px.scatter_3d(df, x = 'sepal_width', y = 'sepal_length', z = 'petal_width')
fig.update_traces(marker = dict(size=5))
fig.add_traces(go.Surface(x = xrange, y = yrange, z = pred, name = 'pred_surface'))
fig.show()
